<?xml version="1.0" encoding="UTF-8"?>
<!-- PHING build script -->
<project name="MockPress" default="build">
 <property name="source" value="."/>
 <property name="basedir" value="${project.basedir}"/>
 <!-- Clean up -->
 <target name="clean">
  <delete dir="${basedir}/build"/>

  <!-- Create build directories -->
  <mkdir dir="${basedir}/build/api"/>
  <mkdir dir="${basedir}/build/code-browser"/>
  <mkdir dir="${basedir}/build/coverage"/>
  <mkdir dir="${basedir}/build/logs"/>
  <mkdir dir="${basedir}/build/pdepend"/>
  <mkdir dir="${basedir}/build/pear"/>
 </target>

 <!-- Run unit tests and generate junit.xml and clover.xml -->
 <target name="phpunit">
  <exec executable="phpunit">
    <arg line="--coverage-html build/coverage test" />
  </exec>
 </target>

 <!-- Run the pdepend, phpmd, phpcpd, phpcs and phploc tasks
      in parallel using a maximum of 2 threads. -->
 <target name="parallelTasks">
  <parallel threadCount="2">
   <antcall target="pdepend"/>
   <antcall target="phpmd"/>
   <antcall target="phpcpd"/>
   <antcall target="phpcs"/>
   <antcall target="phploc"/>
  </parallel>
 </target>

 <!-- Generate jdepend.xml and software metrics charts -->
 <target name="pdepend">
  <exec executable="pdepend">
   <arg line="--jdepend-xml=${basedir}/build/logs/jdepend.xml
              --jdepend-chart=${basedir}/build/pdepend/dependencies.svg
              --overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg
              ${source}" />
  </exec>
 </target>

 <!-- Generate pmd.xml -->
 <target name="phpmd">
  <exec executable="phpmd">
   <arg line="${source}
              xml
              codesize,design,naming,unusedcode
              --reportfile ${basedir}/build/logs/pmd.xml" />
  </exec>
 </target>

 <!-- Generate pmd-cpd.xml -->
 <target name="phpcpd">
  <exec executable="phpcpd">
   <arg line="--log-pmd ${basedir}/build/logs/pmd-cpd.xml ${source}" />
  </exec>
 </target>

 <!-- Generate phploc.csv -->
 <target name="phploc">
  <exec executable="phploc">
   <arg line="--log-csv ${basedir}/build/logs/phploc.csv ${source}" />
  </exec>
 </target>

 <!-- Generate checkstyle.xml -->
 <target name="phpcs">
  <exec executable="phpcs" output="/dev/null">
   <arg line="--report=checkstyle
              --report-file=${basedir}/build/logs/checkstyle.xml
              --standard=Zend
              ${source}" />
  </exec>
 </target>

 <!-- Generate code browser -->
 <target name="phpcb">
  <exec executable="phpcb">
   <arg line="--log    ${basedir}/build/logs
              --source ${source}
              --output ${basedir}/build/code-browser" />
  </exec>
 </target>

 <!-- Build pear package -->
 <target name="pear">

  <!-- Organize files in a pear-friendly manner -->
  <copy todir="${basedir}/build/pear">
   <fileset dir="${basedir}">
    <include name="*.md" />
    <include name="*.php" />
    <include name="includes/**" />
    <include name="README" />
   </fileset>
  </copy>

  <!-- Build package.xml -->
  <tstamp>
    <format property="DATE" pattern="%Y-%m-%d" />
  </tstamp>
  <copy file="${basedir}/package.xml.dist" tofile="${basedir}/build/pear/package.xml">
    <filterchain>
      <replacetokens begintoken="@" endtoken="@">
        <token key="date" value="${DATE}" />
      </replacetokens>
    </filterchain>
  </copy>

  <!-- Build pear package -->
  <exec executable="pear" dir="${basedir}/build/pear">
   <arg line="package package.xml" />
  </exec>

  <!-- Clean up -->
  <delete includeemptydirs="true">
    <fileset dir="${basedir}/build/pear">
      <exclude name="mockpress*.tgz" />
    </fileset>
  </delete>
 </target>

 <!-- Build All -->
 <target name="build" depends="clean,phpcb,phpunit,pear"/>
</project>